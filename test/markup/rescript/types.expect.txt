<span class="hljs-comment">/* type variables */</span>
<span class="hljs-keyword">type</span> t&lt;&#x27;a&gt; <span class="hljs-operator">=</span> list&lt;&#x27;a&gt;
<span class="hljs-keyword">let</span> f <span class="hljs-operator">=</span> (a: list&lt;&#x27;a&gt;): &#x27;a <span class="hljs-title function_">=&gt;</span> <span class="hljs-title class_">List</span>.hd(a)

<span class="hljs-keyword">type</span> record <span class="hljs-operator">=</span> {
  foo: int,
  <span class="hljs-attribute">@as(&quot;BAR&quot;)</span>
  bar?: string,
}

<span class="hljs-comment">/* polymorphic variants */</span>
<span class="hljs-keyword">type</span> t <span class="hljs-operator">=</span> <span class="hljs-literal">[</span><span class="hljs-symbol">#A</span> | <span class="hljs-symbol">#B</span><span class="hljs-literal">]</span>

<span class="hljs-comment">/* variants */</span>
<span class="hljs-keyword">type</span> result <span class="hljs-operator">=</span>
  | <span class="hljs-symbol">Sat</span>
  | <span class="hljs-symbol">Unsat</span>
  | <span class="hljs-symbol">Unknown</span>

<span class="hljs-comment">/* module and module types */</span>
<span class="hljs-keyword">module</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">S</span> = {
  <span class="hljs-keyword">let</span> compute: unit <span class="hljs-title function_">=&gt;</span> unit
}
<span class="hljs-keyword">module</span> <span class="hljs-title class_">Impl</span>: <span class="hljs-title class_">S</span> = {
  <span class="hljs-keyword">let</span> compute <span class="hljs-operator">=</span> () <span class="hljs-title function_">=&gt;</span> ()
}

<span class="hljs-comment">/* types with attributes */</span>
<span class="hljs-attribute">@deriving(jsConverter)</span>
<span class="hljs-keyword">type</span> action <span class="hljs-operator">=</span> <span class="hljs-literal">[</span><span class="hljs-symbol">#Click</span> | <span class="hljs-attribute">@as(&quot;submit&quot;)</span> <span class="hljs-symbol">#Submit</span> | <span class="hljs-symbol">#Cancel</span><span class="hljs-literal">]</span>
