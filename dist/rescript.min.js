/*! `rescript` grammar compiled for Highlight.js 11.9.0 */
(()=>{var e=(()=>{"use strict";return e=>{
var n="[a-z_][0-9a-zA-Z_]*",s="[A-Za-z_][A-Za-z0-9_\\.]*",i="[A-Z_][0-9a-zA-Z_]*",t={
keyword:"and as assert catch constraint downto else exception export external false for if in include lazy let module mutable of open private rec switch to true try type when while with async await",
literal:"true false"};const a={scope:"comment",
variants:[e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]},c={scope:"subst",
begin:"\\$\\{",end:"\\}",keywords:t,contains:[]},o={scope:"string",variants:[{
begin:"("+n+")?`",end:"`"}],contains:[e.BACKSLASH_ESCAPE,c]
},r=[e.QUOTE_STRING_MODE,o];c.contains=r.concat({begin:/\{/,end:/\}/,keywords:t,
contains:["self"].concat(r)});const l={scope:"string",variants:[{begin:'"',
end:'"',contains:[e.BACKSLASH_ESCAPE]}]};var g;const b={begin:i,returnBegin:!0,
contains:[{begin:i,scope:"title.class"},{begin:"\\.",contains:[{begin:i,
scope:"title.class"}]}]};let p={begin:"\\b(open|include)\\s*",keywords:t,
contains:[b]},d={begin:"\\s*\\{\\s*",end:"\\s*\\}\\s*",keywords:t,
returnBegin:!0,contains:[a,{scope:"string",begin:"'[\\x00-\\x7F]'",relevance:0
},{scope:"char.escape",begin:"'\\\\\\w+'",relevance:0},l,o,{
scope:"title.function",begin:"=>"},{scope:"attribute",variants:[{
begin:"@@?("+s+") *\\(",end:"\\s*\\)"},{begin:"@@?("+s+")"},{
begin:"%%?("+s+")\\(",end:"\\s*\\)"},{begin:"%%?("+s+")"}]},{scope:"literal",
variants:[{begin:"\\["},{begin:"\\]"}],relevance:0},{relevance:10,variants:[{
begin:["list","{}?"],beginScope:{1:"literal"}}]},{
illegal:["%","type","!DOCTYPE","!--","xmlns"],variants:[{begin:"<>|</>|/>"},{
begin:"</",contains:[{begin:n,scope:"tag",relevance:0},{begin:i,
scope:"title.class"}]},{begin:"<",contains:[{begin:n,scope:"tag",relevance:0},{
begin:i,scope:"title.class"}]}]},{scope:"operator",relevance:0,
begin:"("+(g=["->","||","&&","++","**","+.","+","-.","-","*.","*","/.","/","...","..","|>","===","==","^",":=","!",">=","<="],
g.map((e=>e.split("").map((e=>"\\"+e)).join(""))).join("|")+")")},{
scope:"operator",begin:"=",relevance:0},{scope:"number",relevance:0,
begin:"\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]+)?([eE][-+]?[0-9_]+)?)?)\\b"
},p,{begin:"\\b"+i+"\\.",returnBegin:!0,contains:[{begin:i,scope:"title.class"}]
},{scope:"symbol",variants:[{begin:/\b[A-Z][0-9a-zA-Z_]*\b/,relevance:0},{
begin:/#[a-zA-Z][0-9a-zA-Z_]*/,relevance:10}]},{scope:"property",relevance:0,
variants:[{begin:n+"\\[",end:"\\]",contains:[l]}]}]};const v={
begin:"\\bmodule\\s+(type\\s+)?(of\\s+)?",keywords:t,illegal:"struct|sig",
contains:[{begin:i,scope:"title.class"},{begin:"\\s*:\\s*",contains:[{begin:i,
scope:"title.class"},d]},{begin:"\\s*=\\s*",contains:[b,{begin:"\\s*\\(\\s*",
end:"\\s*\\)\\s*",keywords:t,contains:[{begin:i,scope:"title.class"},{
begin:"\\s*:\\s*",contains:[{begin:i,scope:"title.class"},d,{begin:"\\s*,\\s*"}]
},d]},d,{begin:"\\s*=>\\s*"}]}]}
;return d.contains.unshift(v),p.contains.push(d),{name:"ReScript",
aliases:["res","resi"],keywords:t,
illegal:[/:-/,/\+=/,/-=/,/::=/,/;/,/class/,/interface/,/val/,/import/,/end /,/<%/,/%>/,/<!DOCTYPE /,/DOCTYPE /,/<!--/,/-->/,/<script /,/<\/script>/,/xmlns/,/{#/,/{\//,/#\s+/,/func /,/package/,/\$\w+/,/\$ /,/do /,/done /,/GOTO /,/BEGIN /,/IF/,/\$if/,/\$noop/,/\.\(/],
contains:d.contains}}})();hljs.registerLanguage("rescript",e)})();